package com.lpu.auth_service.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.lpu.auth_service.model.Users;
import com.lpu.auth_service.repo.UserRepo;

@Service
public class UserService {

    @Autowired 
    private JWTService jwtService;
    @Autowired 
    private AuthenticationManager authManager;
    @Autowired 
    private UserRepo repo;

    public Users register(Users user) {
        user.setPassword(new BCryptPasswordEncoder(12).encode(user.getPassword()));
        return repo.save(user);
    }

    public String verify(Users user) {
        Authentication auth = authManager.authenticate(
            new UsernamePasswordAuthenticationToken(user.getUsername(), user.getPassword()));
        return auth.isAuthenticated() ? jwtService.generateToken(user.getUsername()) : "fail";
    }
}
